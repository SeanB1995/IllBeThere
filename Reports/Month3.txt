	The month started with a member of corporate services division over to check on the progress and discuss the future direction of the project. She was joined in the meeting was attended by supervisor, line manager and another member of the team before coming over to my desk for a demo. However essential updates in the midst of installing instead forced a verbal run through with the aid of screenshots. The feedback received was positive with surprise expressed at the overall progress of the project. Some things like the colour scheme and making the website accessible to all were brought up as necessary improvements needed. A comprehensive document containing all the notes from the meeting with all points made by both sides was sent on to me.
	On the back of the meeting, a work schedule was then created by the software dev, signed off by my supervisor. Effectively this contained a list of all task required for the project with a grading of easy, medium or hard attached to each so everyone will have a fair idea of each tasks respective difficulty.
With the user end which I worked on, and the admin side of the project which another intern worked on, at an approved design stage the next logical step was to code merge. Connecting the two was also necessary for the upcoming tasks as the vast majority rely on the two sides connected. 
	Firstly using the Revenue gitlab, I had to commit the latest version of the code and open a merge request assigned to the team software developer who fine combed through every line of code. The main purpose was to resolve many dead ends and clean the code so it meets company standards. For any change suggested a discussion was opened using gitlab for each specific one which allowed me to explain any reasoning if needed. While applying certain changes, some actually broke different website features which presented alternative issues in need to be fixed before any merge was completed. Once I amended the suggested code changes, I pushed up the code where it was merged. 
	With the merge complete to provide functionality to the website a database was required to store the variety of details which will be presented. There is a central database in place and to create tables in this requires some thought and a lot of time as there were a lot different factors to factor in. For example in part other already created tables can be used but some extra details were needed so this meant creating new tables but using the premade ones as a template. This was done on paper first with the help of the software developer where a map of the flow of the tables was drawn out. Another consideration was memory and if it’ll slow down other apps and such as well as being careful not to conflict with anything while a staff member with sufficient privileges would needed to carry out the creation. With all these considerations, external help had to be sought as to how as to how this conceptual design can be implemented.
	In the meeting an experienced staff member from another department advised to fully complete the UI before any functionality, which is practically finished minus an application form where details are still needed to be sent over. He then recommended also forgetting about the database for the minute and just working with dummy data in JSON format so all known intricacies are ironed out first before creating the more complicated database. We decided to go ahead with this advice so although I had previously used JSON before I had to start researching how we would set out to implement it in this project.
